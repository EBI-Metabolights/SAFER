tmpdir <- "/Users/mjudge/Documents"
maRianaLoc <- "/Users/mjudge/Documents/GitHub/MARIANA-NMR/R"
setwd(maRianaLoc)
mat.loc <- paste0(tmpdir,"/run/spectral_matrix")
dir.create(mat.loc, showWarnings = F)
# Source code
# Running
# source("./vectInds.R")
# source("./fillbetween.R")
source("./readnmrML.R")
source("./readBrukerNMR.R")
source("./readJCAMPDX.R")
# Libraries
packages <- c("pacman","stringr","dplyr", "readxl","magrittr")
new.packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
pacman::p_load(packages, character.only = TRUE)
# Get file locations from the summary file
zip.file.name <- "extract_2023-03-06"
zip.file = list(name = zip.file.name,
loc = paste0(tmpdir,"/metabolights"),
path = paste0(paste0(tmpdir,"/metabolights"), "/", zip.file.name, '.zip'))
# file needs col header for index!
sampleTable.key <- paste0(tmpdir,"/","metabolights/zip_key_sampleTable.xlsx") %>% readxl::read_excel(.)
studies <- sampleTable.key$Study %>% unique
# studies <- studies[!(studies %in% "MTBLS540")]
pref.key <- c("nmrML", "dx", ".dx")#, "pdata/1/1r")
twoDs <- which(grepl("/pdata/9", sampleTable.key$Filename) | grepl("t1t2", sampleTable.key$Filename))
sampleTable.key <- sampleTable.key[-twoDs, ]
study <- "MTBLS602"
# study <- "MTBLS602"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats
study
sampleTable.key$Study %in% study
# study <- "MTBLS602"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
tbl_ss <- sampleTable.key[in.study, ]
View(tbl_ss)
sampleTable.key$Extension[in.study]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
(available.formats %in% pref.key) %>% available.formats[.]
available.formats
pref.key
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
length(available.formats)
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
mat.files <- lapply(studies[2:length(studies)], function(study){
# study <- "MTBLS602"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# If no file.format specified, pick one from available files (preferred order) ####
# if (is.null(file.format)){
#   available.formats <- sampleTable.key$Extension[in.study] %>% unique
#   message("No file.format specified - picking from available formats for ", study, ": ")
#   message(paste(c("   ", available.formats), collapse = '\t'))
#
#   if (any(available.formats %in% "nmrML")){
#     file.format <- "nmrML"
#     message("   ", "using ", file.format," files (preference is nmrML > dx > 1r)")
#
#   } else {
#
#     if (any(available.formats %in% c("dx", ".dx"))){
#       file.format <- c("dx", ".dx")
#       message("   ", "using ", file.format," files (preference is nmrML > dx > 1r)")
#
#     } else {
#
#       if (any(available.formats %in% c("pdata/1/1r"))){
#         file.format <- c("pdata/1/1r")
#         message("   ", "using ", file.format," files (preference is nmrML > dx > 1r)")
#
#       } else {
#         # No format detected
#         file.format <- NULL
#         message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Exiting.")
#         return(NULL)
#       }
#     }
#   }
#
# } else {message("   ", "using specified file format: ", file.format)}
# Extract all filetypes ####
tbl_ss <- sampleTable.key[in.study, ]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
if (length(available.formats) == 0){
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
return(NULL)
}
# Sort formats by preference
# available.formats <- lapply(available.formats, function(type) which(pref.key %in% type)) %>% unlist %>% order %>% available.formats[.]
# Make a temporary spot in the tmp directory (run) for the unzipped files
data.loc <- paste0(tmpdir,"/run/processed_data")
dir.create(data.loc, showWarnings = F)
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
# Clean up the processed data dir (don't keep those files around)
message("Cleaning up processed data files...")
unlink(data.loc, recursive = T)
return(mat.file)
})
study <- "MTBLS639"
# study <- "MTBLS639"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
tbl_ss <- sampleTable.key[in.study, ]
View(tbl_ss)
# Extract all filetypes ####
# tbl_ss <- sampleTable.key[in.study, ]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
available.formats
if (length(available.formats) == 0){
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
return(NULL)
}
# Make a temporary spot in the tmp directory (run) for the unzipped files
data.loc <- paste0(tmpdir,"/run/processed_data")
data.loc
dir.create(data.loc, showWarnings = F)
available.formats
file.format <-  available.formats[1]
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
is.filetype
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
source("./spectra.2.RDS.R")
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
View(wanted.files)
extracted.file
file.exists(extracted.file)
specpaths
# Read files into matrix from list of filepaths
specpaths <- wanted.files$extracted.file[!is.na(wanted.files$extracted.file)]
message("Importing data...")
specpaths
X <- readnmrML(specpaths)
source("~/Documents/GitHub/MARIANA-NMR/R/readnmrML.R")
X <- readnmrML(specpaths)
filenames[1]
tree <- xmlTreeParse(filenames[1])
source("~/Documents/GitHub/MARIANA-NMR/R/readnmrML.R")
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
specpaths
X <- readnmrML(specpaths)
wanted.files
specpaths
X <- readnmrML(specpaths)
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
study <- "MTBLS1"
# study <- "MTBLS639"
# study <- "MTBLS1"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
# tbl_ss <- sampleTable.key[in.study, ]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
if (length(available.formats) == 0){
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
return(NULL)
}
# Make a temporary spot in the tmp directory (run) for the unzipped files
data.loc <- paste0(tmpdir,"/run/processed_data")
dir.create(data.loc, showWarnings = F)
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
specpaths
X <- readnmrML(specpaths)
source("~/Documents/GitHub/MARIANA-NMR/R/readnmrML.R")
X <- readnmrML(specpaths)
View(spectrumList)
study <- "MTBLS639"
# study <- "MTBLS639"
# study <- "MTBLS1"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
# tbl_ss <- sampleTable.key[in.study, ]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
if (length(available.formats) == 0){
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
return(NULL)
}
# Make a temporary spot in the tmp directory (run) for the unzipped files
data.loc <- paste0(tmpdir,"/run/processed_data")
dir.create(data.loc, showWarnings = F)
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
specpaths
X <- readnmrML(specpaths)
tree <- xmlTreeParse(filenames[1])
root <- xmlRoot(tree)
View(root)
acquisition <- xmlElementsByTagName(root, "acquisition", recursive = TRUE)[[1]]
View(root)
View(acquisition)
SFO1 <- as.double(xmlAttrs(xmlElementsByTagName(acquisition, "irradiationFrequency", recursive = TRUE)[[1]])["value"])
SWH <- as.double(xmlAttrs(xmlElementsByTagName(acquisition, "sweepWidth", recursive = TRUE)[[1]])["value"])
SW <- SWH/SFO1
spectrumList <- xmlElementsByTagName(root, "spectrum1D", recursive = TRUE)
View(root)
filenames
spectrumList <- xmlElementsByTagName(root, "spectrum1D", recursive = TRUE)
length(spectrumList)==0
source("~/Documents/GitHub/MARIANA-NMR/R/readnmrML.R")
source("~/Documents/GitHub/MARIANA-NMR/R/readnmrML.R")
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
source("~/Documents/GitHub/MARIANA-NMR/R/spectra.2.RDS.R")
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
mat.files <- lapply(studies[1:length(studies)], function(study){
# study <- "MTBLS639"
# study <- "MTBLS1"
# Select study rows
in.study <- sampleTable.key$Study %in% study
# Extract all filetypes ####
# tbl_ss <- sampleTable.key[in.study, ]
available.formats <- sampleTable.key$Extension[in.study] %>% unique
available.formats <- (available.formats %in% pref.key) %>% available.formats[.]
if (length(available.formats) == 0){
message("Study ", study, " does not contain spectra in one of the supported formats (nmrML > dx > 1r). Skipping")
return(NULL)
}
# Sort formats by preference
# available.formats <- lapply(available.formats, function(type) which(pref.key %in% type)) %>% unlist %>% order %>% available.formats[.]
# Make a temporary spot in the tmp directory (run) for the unzipped files
data.loc <- paste0(tmpdir,"/run/processed_data")
dir.create(data.loc, showWarnings = F)
# For each file type in this study
for (file.format in available.formats){
# file.format <-  available.formats[1]
# Get data type and string ####
if (file.format %in% "nmrML"){
format.string <- "nmrML"
}
if (file.format %in% c("dx",".dx")){
format.string <- "dx"
}
if (file.format %in% c("pdata/1/1r")){
format.string <- "1r"
}
print(paste0("-----    ", study, " - ", format.string, " files    -----"))
# Subset table for those files ####
is.filetype <- sampleTable.key$Extension %in% file.format
wanted.files <- (in.study & is.filetype) %>%
sampleTable.key[.,]
wanted.files$extracted.file <- NA
# Extract and convert those files ####
mat.file <- spectra.2.RDS(study, wanted.files, zip.file, data.loc, format.string)
}
# Clean up the processed data dir (don't keep those files around)
message("Cleaning up processed data files...")
unlink(data.loc, recursive = T)
return(mat.file)
})
pref.key
paste(pref.key, collapse = " ")
paste(pref.key, collapse = " > ")
