% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/next.driver.R
\name{next.driver}
\alias{next.driver}
\title{Select a new driver based on the ref profile
(accessory function for storm_pairplay() )}
\usage{
next.driver(current.driver, ref.profile, ref.idx, behavior = "samePk")
}
\arguments{
\item{current.driver}{current driver position, should match an element in ref.idx}

\item{ref.profile}{covar profile for ref. can have NAs or not (usually omitted)}

\item{ref.idx}{indices for each value in ref.profile, usually ppm indices}

\item{behavior}{see options. Default is samePk.}
}
\value{
list with driver index and bounds (using ref.idx vals, typically cols of xmat)
}
\description{
Option 1 - 'simpleMax': 
  - standard option, traditionally used in STORM
  - select max intensity in the ref.profile (usually covariance w/current driver)
  - no bounds
  
  However, this can lead to STORM walking around a lot, to the point that the ref 
  no longer contains the initial driver at all (therefore not extracting the relic
  for the peak of interest). We can remedy this situation by doing peak-based 
  driver selection. Using feat.extractPeaks():
  
Option 2 - 'pkMax': 
  - select max intensity in the ref.profile (usually covariance w/current driver), 
    but must belong to a true peak (lower values on both sides)
  - returns bounds (for good measure)
  
Option 3 - 'samePk': 
  - pick driver within bounds of true ref peak that contains previous (current) driver.
  - return bounds as well
}
\details{
All options express driver and bounds indices according to ref.idx, as this is
how STORM usually wants them and that's the most basic indexing level. 

For peak-based options, if no peak is found which satisfies the criteria, a NULL
result is returned for both list values.

MTJ 18MAY2023
}
