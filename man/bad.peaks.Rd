% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bad.peaks.R
\name{bad.peaks}
\alias{bad.peaks}
\title{Calculate how often each feature point is fit across the reference database}
\usage{
bad.peaks(pos.res.pct.feat, scale.exp = 2)
}
\arguments{
\item{pos.res.pct.feat}{matrix of positive residuals for a feature to all references fit as a percent of the feature resonance height}

\item{scale.exp}{a scaling exponent for the weights to select for values very close to 1 (default is 2)}
}
\value{
A vector of weights, one for each point in the feature profile,
indicating how rarely the feature point was fit in the ref DB matches the 
which can be (e.g.) multiplied by and then subtracted from feature
to squash not-never-fit peaks in the feature, or (1-result) * rmse values to 
downweight the effect of not-never-fit peaks (those not represented in the ref DB, 
and more likely to be false positives in feature extraction).
}
\description{
Get weights for feature profile points according to how often they fit against reference DB peaks.
mean of the % of the feature signal that had no corresponding ref signal (extra peak in feature)
useful to scale this by some exponential (e.g. 2) to select extremely high percentages
lapply(allmatches.fits, function(x) x$overshoot.pct.feat) %>% do.call(rbind,.)
}
