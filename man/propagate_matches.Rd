% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/propagate_matches.R
\name{propagate_matches}
\alias{propagate_matches}
\title{Propagate matches from cluster keys to the rest of each cluster.}
\usage{
propagate_matches(
  match.info,
  cluster,
  feature.stack,
  ref.mat,
  ncores,
  r.thresh,
  p.thresh,
  pad.size,
  this.run
)
}
\arguments{
\item{match.info}{match info table (each row describes an rf)}

\item{cluster}{object (list) with cluster information, as provided by tina}

\item{feature.stack}{feature profiles on rows}

\item{ref.mat}{refs}

\item{ncores}{pars}

\item{r.thresh}{pars}

\item{p.thresh}{pars}

\item{pad.size}{from matching}

\item{this.run}{pars}
}
\value{
updated and expanded match.info object. * Note: weighted.rmse and peak-specific fields may be duplicated/missing, as they cannot be computed here (or don't matter going forward)
}
\description{
For each match, produce other matches based on clusters
- loop through clusters
- copy all matches from key to other cluster members
- what gets copied?
  - match.info row = ref.feature
  - all that's needed is to test the ref feature in the local regions 
    x spectra from which the cluster member was extracted, as gained 
    from the sfe
  - fstack.row is the row of the match matrix (subset of feature matrix)
- what gets added?
  - new feature, lagged and fit to ref
  - just store the coefficients and positions
  
This boils down to a match.info row for every feature. Fits can be rebuilt
on the fly from this and the feature/spectral matrix/ref matrix.
}
